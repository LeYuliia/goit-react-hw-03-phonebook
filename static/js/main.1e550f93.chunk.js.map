{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","utils/localStorage.js","App.js","index.js"],"names":["ContactForm","state","name","number","nameInputId","uuidv4","phoneInputId","handleChange","target","value","setState","handleSubmit","event","preventDefault","props","onSubmit","reset","this","Form","className","Row","Col","Control","type","id","onChange","placeholder","Button","size","onClick","variant","Component","ContactList","contacts","onDeleteContact","ListGroup","map","Item","key","Filter","filter","InputGroup","Prepend","Text","FormControl","getFromLS","item","localStorage","getItem","JSON","parse","App","addContact","contact","findName","find","cnt","findNumber","toast","info","position","autoClose","warn","deleteContact","contactId","prevState","changeFilter","e","currentTarget","getVisibleContacts","normalizedFilter","toLowerCase","includes","setItem","stringify","visibleContacts","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e550f93.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n//Styles:\r\nimport \"./ContactForm.scss\";\r\nimport { Button, Form, Col, Row } from \"react-bootstrap\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  //Переменные\r\n  nameInputId = uuidv4();\r\n  phoneInputId = uuidv4();\r\n  // Функции событий\r\n  handleChange = ({target:{name,value}}) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {name, number} = this.state\r\n    return (\r\n      <Form className=\"form\">\r\n        <Row>\r\n          <Col>\r\n            <Form.Control\r\n              className=\"form__item\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              id={this.nameInputId}\r\n              onChange={this.handleChange}\r\n              placeholder=\"Contact name:\"\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <Form.Control\r\n              className=\"form__item\"\r\n              type=\"phone\"\r\n              name=\"number\"\r\n              value={number}\r\n              id={this.phoneInputId}\r\n              onChange={this.handleChange}\r\n              placeholder=\"Phone number:\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Button\r\n          size=\"sm\"\r\n          className=\"form__submit\"\r\n          type=\"submit\"\r\n          name=\"contact\"\r\n          onClick={this.handleSubmit}\r\n          variant=\"outline-info\"\r\n        >\r\n          Add Contact\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\n//Styles:\r\nimport \"./ContactList.scss\";\r\nimport { ListGroup, Button } from \"react-bootstrap\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ListGroup variant=\"flush\" className=\"contact-list\">\r\n    {contacts.map(({ name, number, id }) => (\r\n      <ListGroup.Item key={id} className=\"contact-list__item\">\r\n        <p className=\"contact-list__text\">\r\n          {name}: {number}\r\n        </p>\r\n        <Button\r\n          className=\"contact-list__button\"\r\n          variant=\"outline-danger\"\r\n          size=\"sm\"\r\n          onClick={() => onDeleteContact(id)}\r\n        >\r\n          Delete\r\n        </Button>\r\n      </ListGroup.Item>\r\n    ))}\r\n  </ListGroup>\r\n);\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\n//Styles:\r\nimport \"./Filter.scss\";\r\nimport { InputGroup, FormControl } from \"react-bootstrap\";\r\n\r\nconst Filter = ({ filter, onChange }) => (\r\n  <InputGroup size=\"sm\" className=\"filter-wrapp\">\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>Find contact:</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <FormControl type=\"text\" name=\"filter\" value={filter} onChange={onChange} />\r\n  </InputGroup>\r\n);\r\n\r\nexport default Filter;\r\n","export const saveToLS = (key, value) => {\r\n      localStorage.setItem(key, JSON.stringify(value));\r\n  };\r\n  \r\n  export const getFromLS = key => {\r\n      const item = localStorage.getItem(key);\r\n      return item ? JSON.parse(item) : null;\r\n  };","import React, { Component } from \"react\";\n// Компоненты:\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter\";\n\nimport {saveToLS, getFromLS} from './utils/localStorage'\n// ID Generetor:\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      name,\n      number,\n      id: uuidv4(),\n    };\n    const { contacts } = this.state;\n    const findName = contacts.find((cnt) => cnt.name === name);\n    const findNumber = contacts.find((cnt) => cnt.number === number);\n    // Проверка на заполненость всех полей формы:\n    if (!name || !number) {\n      toast.warn(\"Please,  fill in all fields\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        });\n      // Пpоверка на наличие добавляемого контакта в существующем списке:\n    } else if (findName || findNumber) {\n      toast.info(`Contact with name ${name} or phone number ${number} is already on your list`, {\n        position: \"top-center\",\n        autoClose: 5000,\n        });\n      // Добавление контакта в список:\n      } else {\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    }\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  //Запись в хранилище\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      saveToLS(\"contacts\", this.state.contacts);\n    }\n  }\n  // Рендер из хранилища\n  componentDidMount() {\n    if (getFromLS(\"contacts\")) {\n      this.setState({ contacts: getFromLS(\"contacts\") });\n    }\n  }\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <>\n        <section className=\"add-contact\">\n          <h1 className=\"title\">Phonebook</h1>\n          <ContactForm onSubmit={this.addContact} />\n        </section>\n        <section className=\"contacts\">\n          <h2 className=\"title\">Contacts</h2>\n          {this.state.contacts.length > 2 && (\n            <Filter filter={this.state.filter} onChange={this.changeFilter} />\n          )}\n\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        </section>\n        <ToastContainer />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}